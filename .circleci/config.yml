# Python CircleCI 2.0 configuration file
#
# Based on https://github.com/levlaz/circleci.py/blob/master/.circleci/config.yml

version: 2.1
workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test-python-install:
          version: "3.5"
          requires:
            - build
      - test-python-install:
          version: "3.6"
          requires:
            - build
      - test-python-install:
          version: "3.7"
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: v/[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}-{{ checksum "setup.py" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          paths:
            - "venv"
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}-{{ checksum "setup.py" }}
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = levlaz" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest
      - store_artifacts:
          path: test-reports
          destination: test-reports

  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}-{{ checksum "setup.py" }}
            - v1-dependencies-
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          paths:
            - "venv"
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}-{{ checksum "setup.py" }}
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
      - store_artifacts:
          path: htmlcov/
      - run:
          name: Smoke Test Install 
          command: |
            python --version
            sudo pip3 install lox
  integration:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - run: echo "It works!"
      - run: echo $RUN_EXTRA_TESTS
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}-{{ checksum "setup.py" }}
            - v1-dependencies-
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}-{{ checksum "setup.py" }}
          paths:
            - "venv"
      - run:
          name: verify git tag vs. version
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = BrianPugh" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
